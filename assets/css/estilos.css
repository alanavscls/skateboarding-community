@font-face {
    font-family: 'icones';
    src: url(../font/icones.ttf);
}

body {
    background-color: #1D232A;
    font-family: 'Open Sans', 'icones', sans-serif;
    color: #FFFFFF;
}

.cabecalho {
   display: flex;
   justify-content: space-between; /*A propriedade "Justify-content" mexe com os elementos no eixo horizontal. Alguns valores aceitos: flex-start(valor padrão), flex-end, center, space-around, space-evenly e space-between.*/
   align-items: center; /*O "align-items" mexe com os elementos no eixo vertical. Alguns valores aceitos: flex-start, flex-end, center e stretch(valor padrão). O "stretch" faz todos os elementos ocuparem a mesma altura do flex-container.*/
   background-color: #15191C;
   padding: 8px 16px; /*Quando só tem dois valores assim o primeiro valor fica em cima e embaixo, o segundo valor corresponde às laterais.*/
   box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.16);
}

.cabecalho__menu i::before {
    content: "\e904";
    font-size: 24px;
}

.cabecalho__notificacao i::before {
    content: "\e906";
    font-size: 24px;
}

.cabecalho__logo {
    width: 40px;
}

.menu-lateral {
    display: flex; /*Adicionando o "display: flex" nessa classe "menu-lateral" eu estou tornando o menu lateral em um flex container.*/
    flex-direction: column; /*Uso porque eu quero que os elementos fiquem um abaixo do outro no menu lateral*/
    background-color: #15191C;
    width: 75vw; /*Ele vai ter uma largura de 75vw e esse "vw" é de viewport*/
    height: 100vh; /*Altura do viewport(por isso o v de viewport e h de height)*/
    
}

.menu-lateral__logo {
    width: 118px;
    align-self: center;
    padding: 16px;
}